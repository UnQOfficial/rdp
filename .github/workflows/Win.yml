name: WINDOWS 2022 RDP - FIXED
on:
  workflow_dispatch

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 9999

    steps:
      - name: Download and Extract Ngrok
        run: |
          Write-Host "Downloading Ngrok..."
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -Force
          Write-Host "Ngrok downloaded successfully!"

      - name: Configure RDP Access
        run: |
          Write-Host "Configuring RDP..."
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
          Write-Host "RDP enabled successfully!"

      - name: Set User Password
        run: |
          Write-Host "Setting up user credentials..."
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "RDP@2025Pass!" -Force)
          Write-Host "User password configured!"

      - name: Configure Ngrok Auth Token
        run: |
          Write-Host "Configuring Ngrok authentication..."
          .\ngrok\ngrok.exe config add-authtoken 341Cgd8QHfEBLmz9FrVzEDt1e8Q_5f8d9DJMDJzgQGJ3M2oW5
          Write-Host "Ngrok token configured successfully!"

      - name: Start Ngrok Tunnel
        run: |
          Write-Host "Starting Ngrok tunnel..."
          Start-Job -ScriptBlock { 
            Set-Location $using:PWD
            .\ngrok\ngrok.exe tcp --region ap 3389 
          }
          Write-Host "Tunnel process started, waiting for initialization..."
          Start-Sleep -Seconds 15

      - name: Get RDP Connection Details
        run: |
          Write-Host "Fetching tunnel information..."
          $retries = 0
          $maxRetries = 15
          $tunnelUrl = $null
          
          while ($retries -lt $maxRetries -and -not $tunnelUrl) {
              try {
                  Start-Sleep -Seconds 2
                  $response = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels -ErrorAction Stop
                  
                  if ($response.tunnels -and $response.tunnels.Count -gt 0) {
                      $tunnelUrl = $response.tunnels[0].public_url
                      
                      Write-Host ""
                      Write-Host "=================================================="
                      Write-Host "     ✓ RDP CONNECTION READY!" -ForegroundColor Green
                      Write-Host "=================================================="
                      Write-Host ""
                      Write-Host "Connection Details:"
                      Write-Host "  URL      : $tunnelUrl" -ForegroundColor Cyan
                      Write-Host "  Username : runneradmin" -ForegroundColor Cyan
                      Write-Host "  Password : RDP@2025Pass!" -ForegroundColor Cyan
                      Write-Host ""
                      Write-Host "=================================================="
                      Write-Host "Ngrok Dashboard: https://dashboard.ngrok.com/endpoints"
                      Write-Host "Web Interface : http://127.0.0.1:4040"
                      Write-Host "=================================================="
                      Write-Host ""
                      break
                  }
              } catch {
                  Write-Host "Attempt $($retries + 1)/$maxRetries - Waiting for ngrok API..." -ForegroundColor Yellow
              }
              $retries++
          }
          
          if (-not $tunnelUrl) {
              Write-Host ""
              Write-Host "=================================================="
              Write-Host "     ⚠ Could not auto-fetch tunnel URL" -ForegroundColor Yellow
              Write-Host "=================================================="
              Write-Host ""
              Write-Host "Please check your ngrok dashboard for the connection URL:"
              Write-Host "https://dashboard.ngrok.com/endpoints" -ForegroundColor Cyan
              Write-Host ""
              Write-Host "Login Credentials:"
              Write-Host "  Username: runneradmin"
              Write-Host "  Password: RDP@2025Pass!"
              Write-Host ""
              Write-Host "=================================================="
          }

      - name: Keep Session Active
        run: |
          Write-Host ""
          Write-Host "Session is now active and running..."
          Write-Host "This workflow will run for up to 6 hours."
          Write-Host ""
          $startTime = Get-Date
          
          while ($true) {
              $elapsed = (Get-Date) - $startTime
              $hours = [math]::Floor($elapsed.TotalHours)
              $minutes = [math]::Floor($elapsed.TotalMinutes % 60)
              
              Write-Host "[ACTIVE] Runtime: $hours hours $minutes minutes - $(Get-Date -Format 'HH:mm:ss')" -ForegroundColor Green
              
              Start-Sleep -Seconds 120
          }
